name: AI Agent

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∞–≥–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—à—å –≤—Ä—É—á–Ω—É—é)"
        required: true
        default: "–ü–æ—á–∏–Ω–∏ –±–∞–≥(–∏) –∏ —É–ª—É—á—à–∏ –∫–æ–¥ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é"
      files:
        description: "–ö–∞–∫–∏–µ —Ñ–∞–π–ª—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)"
        required: false
        default: "bot.py"
      model:
        description: "–ú–æ–¥–µ–ª—å OpenAI"
        required: false
        default: "gpt-4o-mini-2024-07-18"
  issues:
    types: [labeled]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  run:
    # –∑–∞–ø—É—Å–∫: –≤—Ä—É—á–Ω—É—é –ò–õ–ò –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Ç–∫–∏ "AI Agent" –∫ issue
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'issues' && github.event.label.name == 'AI Agent') }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # ‚úÖ —Å—Ç–∞–≤–∏–º aider –∫–∞–∫ –º–æ–¥—É–ª—å –∏ –±—É–¥–µ–º –≤—ã–∑—ã–≤–∞—Ç—å —á–µ—Ä–µ–∑ `python -m`
      - name: Install Aider (stable)
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install "aider-chat==0.60.1" openai

      - name: Git identity
        run: |
          git config user.name  "ai-agent[bot]"
          git config user.email "ai-agent-bot@users.noreply.github.com"

      - name: Prepare inputs (title/body/files/model + default branch)
        id: prep
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TITLE="Manual run"
            BODY="${{ inputs.prompt }}"
            FILES="${{ inputs.files }}"
            MODEL="${{ inputs.model }}"
          else
            TITLE="${{ github.event.issue.title }}"
            BODY="${{ github.event.issue.body }}"
            FILES="bot.py"
            MODEL="gpt-4o-mini-2024-07-18"
          fi

          printf '%s\n\n%s\n' "$TITLE" "$BODY" > prompt.txt
          echo "FILES=$FILES" >> "$GITHUB_ENV"
          echo "MODEL=$MODEL" >> "$GITHUB_ENV"

          BASE=$(gh repo view --json defaultBranchRef --jq .defaultBranchRef.name)
          echo "BASE_BRANCH=$BASE" >> "$GITHUB_ENV"

      - name: Create branch
        id: branch
        run: |
          BRANCH="ai-agent/${{ github.run_id }}-${{ github.run_attempt }}"
          git checkout -b "$BRANCH"
          echo "BRANCH=$BRANCH" >> "$GITHUB_ENV"

      - name: Run Aider (apply fixes) with OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "‚ùå –ù–µ—Ç OPENAI_API_KEY –≤ Secrets. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Å—å."
            exit 1
          fi

          # –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è –º–æ–¥–µ–ª–∏ –∏–∑ UI –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ
          if [[ "$MODEL" == gpt-4o-mini-* ]]; then
            MODEL="gpt-4o-mini"
          fi

          echo "üéØ –ú–æ–¥–µ–ª—å: $MODEL"
          echo "üìù –§–∞–π–ª—ã:  $FILES"
          echo "---- PROMPT (first 40 lines) ----"
          sed -n '1,40p' prompt.txt || true
          echo "---------------------------------"

          # –≤—ã–∑—ã–≤–∞–µ–º aider –∫–∞–∫ –º–æ–¥—É–ª—å Python (–Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç PATH)
          python -m aider --yes --model "$MODEL" -m "$(cat prompt.txt)" $FILES

      - name: Commit and Push
        run: |
          git add -A
          if git diff --staged --quiet; then
            echo "no_changes=true" >> $GITHUB_ENV
            echo "‚ÑπÔ∏è  Aider –Ω–µ –≤–Ω—ë—Å –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–º–ø—Ç –Ω–µ —Ç—Ä–µ–±–æ–≤–∞–ª –ø—Ä–∞–≤–æ–∫."
          else
            TITLE_LINE=$(head -n 1 prompt.txt | cut -c1-72)
            git commit -m "AI: $TITLE_LINE"
            git push -u origin "$BRANCH"
            echo "no_changes=false" >> $GITHUB_ENV
          fi

      - name: Create PR body file (safe)
        if: env.no_changes == 'false'
        run: |
          EVENT="$GITHUB_EVENT_NAME"
          ACTOR="$GITHUB_ACTOR"
          {
            echo "–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π PR –æ—Ç AI Agent."
            echo
            echo "**–ú–æ–¥–µ–ª—å:** $MODEL  "
            echo "**–§–∞–π–ª—ã:** $FILES"
            echo
            echo "> –ò—Å—Ç–æ—á–Ω–∏–∫:"
            echo "> ‚Ä¢ —Å–æ–±—ã—Ç–∏–µ: $EVENT"
            echo "> ‚Ä¢ –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä: @$ACTOR"
          } > pr_body.md

      - name: Create Draft PR
        if: env.no_changes == 'false'
        run: |
          gh pr create \
            --base "$BASE_BRANCH" \
            --head "$BRANCH" \
            --title "AI: $(head -n 1 prompt.txt)" \
            --body-file pr_body.md \
            --draft

      - name: Comment issue with PR link (optional)
        if: ${{ github.event_name == 'issues' && env.no_changes == 'false' }}
        run: |
          URL=$(gh pr list --head "$BRANCH" --json url --jq '.[0].url')
          gh issue comment ${{ github.event.issue.number }} --body "–û—Ç–∫—Ä—ã–ª PR: $URL"

      - name: No changes note
        if: env.no_changes == 'true'
        run: echo "‚ÑπÔ∏è  –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç ‚Äî –ø—Ä–æ–≤–µ—Ä—å PROMPT/FILES –∏–ª–∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∑–∞–¥–∞—á—É."
