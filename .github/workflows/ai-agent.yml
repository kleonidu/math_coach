name: AI Agent - Autonomous Development

on:
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]

jobs:
  ai-develop:
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –º–µ—Ç–∫–∞ ai-task
    if: |
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'ai-task')) ||
      (github.event_name == 'issue_comment' && contains(github.event.issue.labels.*.name, 'ai-task'))
    
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
    
    steps:
      - name: üîç Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: üì¶ Install dependencies
        run: |
          pip install aider-chat
          pip install -r requirements.txt || echo "No requirements.txt found"
      
      - name: ü§ñ Run Aider AI Agent
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ –∏–∑ Issue
          ISSUE_BODY="${{ github.event.issue.body }}"
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git
          git config --global user.name "AI Agent"
          git config --global user.email "ai-agent@github.com"
          
          # –°–æ–∑–¥–∞—ë–º –≤–µ—Ç–∫—É –¥–ª—è AI
          BRANCH_NAME="ai-fix-${ISSUE_NUMBER}"
          git checkout -b ${BRANCH_NAME}
          
          # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è Aider
          PROMPT="Task from Issue #${ISSUE_NUMBER}: ${ISSUE_TITLE}

${ISSUE_BODY}

Instructions:
1. Analyze the codebase carefully
2. Implement the requested feature or fix
3. Follow existing code style and patterns
4. Add comments for complex logic
5. Make sure code is production-ready

Focus on bot.py and related files."
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º Aider —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
          echo "$PROMPT" | aider \
            --yes \
            --model claude-3-5-sonnet-20241022 \
            --no-auto-commits \
            --message "$PROMPT" \
            bot.py requirements.txt
          
          # –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
          git add -A
          git commit -m "ü§ñ AI Agent: $ISSUE_TITLE" || echo "No changes to commit"
          
          # –ü—É—à –≤ –Ω–æ–≤—É—é –≤–µ—Ç–∫—É
          git push origin ${BRANCH_NAME}
      
      - name: üìù Create Pull Request
        if: success()
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ai-fix-${{ github.event.issue.number }}
          title: "ü§ñ AI: ${{ github.event.issue.title }}"
          body: |
            ## ü§ñ AI Agent Implementation
            
            This PR was automatically generated by the AI Agent in response to issue #${{ github.event.issue.number }}.
            
            ### Changes:
            - Implemented: ${{ github.event.issue.title }}
            
            ### Review Checklist:
            - [ ] Code follows project conventions
            - [ ] No breaking changes
            - [ ] Ready to merge
            
            **Closes #${{ github.event.issue.number }}**
          labels: |
            ai-generated
            auto-pr
      
      - name: üí¨ Comment on Issue
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ü§ñ AI Agent has created a Pull Request with the implementation. Please review and merge if everything looks good!'
            })
      
      - name: ‚ùå Report Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå AI Agent encountered an error while processing this task. Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
            })
